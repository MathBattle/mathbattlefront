{"ast":null,"code":"var _jsxFileName = \"/Users/ulyanaeskova/mathbattlefront/src/components/coursecmp/left-menu/left-menu.js\";\nimport React from 'react';\nimport './left-menu.css';\nimport LeftBar from '../left-bar/left-bar.js';\nimport Messages from '../messages/messages.js';\nimport axios from 'axios';\nconst icons = [\"8C\", \"8T\", \"Доп\", \"MathBattle\"];\n\nclass ServerIcon extends React.Component {\n  random(seed) {\n    var x = Math.sin(seed);\n    return x;\n  }\n\n  colToHex(c) {\n    // Hack so colors are bright enough\n    let color = c < 75 ? c + 75 : c;\n    let hex = color.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  } // uses colToHex to concatenate\n  // a full 6 digit hex code\n\n\n  rgbToHex(r, g, b) {\n    return \"#\" + this.colToHex(r) + this.colToHex(g) + this.colToHex(b);\n  } // Returns three random 0-255 integers\n\n\n  fungetRandomColor(text) {\n    return this.rgbToHex(Math.floor(Math.abs(this.random(this.hash(text))) * 255), Math.floor(Math.abs(this.random(this.hash(text + \"1303\"))) * 255), Math.floor(Math.abs(this.random(this.hash(text + \"3031\"))) * 255));\n  }\n\n  hash(s) {\n    return s.split(\"\").reduce(function (a, b) {\n      a = (a << 5) - a + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"server-icon\",\n      onClick: this.props.handler,\n      style: {\n        backgroundColor: this.fungetRandomColor(this.props.text)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"server-icon-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.props.text));\n  }\n\n}\n\nclass LeftMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: []\n    };\n    this.threads = React.createRef();\n    this.messages = React.createRef();\n  }\n\n  handler(id) {\n    this.setState({\n      course_now: id\n    });\n    this.threads.current.load_threads(id);\n  }\n\n  componentDidMount() {\n    console.log(this.props.token);\n    axios.get(`http://api.math.silaeder.ru/courses`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Authorization\": \"Bearer zw7J3dyvwoaiKVSUy83vWg==\"\n      },\n      responseType: 'json'\n    }).then(res => {\n      console.log(res);\n      const courses = res.data;\n      this.setState({\n        courses\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    }, this.state.courses.map(course => /*#__PURE__*/React.createElement(ServerIcon, {\n      text: course.name,\n      handler: this.handler.bind(this, course.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(LeftBar, {\n      thread: this.threads,\n      messages: this.messages,\n      course_id: this.state.course_now,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Messages, {\n      ref: this.messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default LeftMenu;","map":{"version":3,"sources":["/Users/ulyanaeskova/mathbattlefront/src/components/coursecmp/left-menu/left-menu.js"],"names":["React","LeftBar","Messages","axios","icons","ServerIcon","Component","random","seed","x","Math","sin","colToHex","c","color","hex","toString","length","rgbToHex","r","g","b","fungetRandomColor","text","floor","abs","hash","s","split","reduce","a","charCodeAt","render","props","handler","backgroundColor","LeftMenu","constructor","state","courses","threads","createRef","messages","id","setState","course_now","current","load_threads","componentDidMount","console","log","token","get","headers","responseType","then","res","data","map","course","name","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './left-menu.css'\nimport LeftBar from '../left-bar/left-bar.js'\nimport Messages from '../messages/messages.js'\n\n\nimport axios from 'axios';\nconst icons = [\"8C\", \"8T\", \"Доп\", \"MathBattle\"]\n\nclass ServerIcon extends React.Component {\n  random(seed) {\n    var x = Math.sin(seed);\n    return x;\n  }\n  colToHex(c) {\n\n    // Hack so colors are bright enough\n    let color = (c < 75) ? c + 75 : c\n    let hex = color.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n\n  // uses colToHex to concatenate\n  // a full 6 digit hex code\n  rgbToHex(r,g,b) {\n    return \"#\" + this.colToHex(r) + this.colToHex(g) + this.colToHex(b);\n  }\n\n  // Returns three random 0-255 integers\n  fungetRandomColor(text) {\n\n    return this.rgbToHex(\n      Math.floor(Math.abs(this.random(this.hash(text))) * 255),\n      Math.floor(Math.abs(this.random(this.hash(text + \"1303\"))) * 255),\n      Math.floor(Math.abs(this.random(this.hash(text + \"3031\"))) * 255));\n  }\n\n  hash(s){\n    return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\n  }\n\n  render() {\n    return (\n      <div className=\"server-icon\" onClick = {this.props.handler} style={{backgroundColor: this.fungetRandomColor(this.props.text)}}>\n        <p className=\"server-icon-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass LeftMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      courses: [],\n    }\n    this.threads = React.createRef();\n    this.messages = React.createRef();\n  }\n  handler(id) {\n    this.setState({course_now: id});\n    this.threads.current.load_threads(id);\n  }\n\n\n  componentDidMount() {\n    console.log(this.props.token)\n    axios.get(`http://api.math.silaeder.ru/courses`,{\n      headers: {\"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Authorization\": \"Bearer zw7J3dyvwoaiKVSUy83vWg==\"},\n    responseType: 'json',\n     }).then(res => {\n        console.log(res);\n        const courses = res.data;\n        this.setState({ courses });\n      })\n  }\n\n  render() {\n\n    return (\n      <div>\n         <div className=\"left-menu\">\n          { this.state.courses.map(course => <ServerIcon text={course.name} handler = {this.handler.bind(this, course.id)}/>)}\n        </div>\n        <LeftBar thread={this.threads} messages={this.messages} course_id={this.state.course_now}/>\n        <Messages ref={this.messages}/>\n      </div>\n    );\n  }\n}\n\n\nexport default LeftMenu;\n"]},"metadata":{},"sourceType":"module"}